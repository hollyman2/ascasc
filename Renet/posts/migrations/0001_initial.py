# Generated by Django 5.0.2 on 2024-02-23 08:28

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FriendRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_request_creator', to=settings.AUTH_USER_MODEL, verbose_name='Request author')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_request_recipient', to=settings.AUTH_USER_MODEL, verbose_name='Request recipient')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='posts_pictures/%Y/%m/%d/', verbose_name='Picture')),
                ('video', models.FileField(blank=True, null=True, upload_to='posts_videos/images/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp4'])], verbose_name='Video')),
                ('description', models.TextField(max_length=500, verbose_name='Description')),
                ('count_of_likes', models.IntegerField(default=0, verbose_name='Count of likes')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_posts', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(max_length=500, verbose_name='Description')),
                ('count_of_likes', models.IntegerField(default=0, verbose_name='Count of likes')),
                ('edited', models.BooleanField(default=False)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_user_comments', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_comments', to='posts.post', verbose_name='Post')),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
            },
        ),
        migrations.CreateModel(
            name='ReplyComment',
            fields=[
                ('comment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='posts.comment')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_reply_comment', to='posts.comment')),
            ],
            options={
                'verbose_name': 'Reply to comment',
                'verbose_name_plural': 'Replies to comment',
            },
            bases=('posts.comment',),
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='get_comment_likes', to='posts.comment', verbose_name='Liked comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_user_likes', to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='get_post_likes', to='posts.post', verbose_name='Liked post')),
                ('reply_comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='get_reply_comment_likes', to='posts.replycomment', verbose_name='Liked reply comment')),
            ],
        ),
    ]
